README

Photometry
- HST16_concat.fits; archival HST individual field photometry used for the oldest masks
- HST_fall18_refine.fits; pre-release version of PHATTER photometry used for mask design in the central regions. 
- M33.GI.matchcat.fits; pre-release version of PAndAS photometry (i.e. CFHT MegaCam) manually aligned by Karrie with the archival HST photometry and used for design of the earliest masks. 
- pandas_goodstar_bright_sr.fits; public version of PAndAS photometry, used for design of the outermost masks. 
- phatter_matchedall.fits; public version of the PHATTER photometry. Not used for any mask design but does provide photometric uncertainties. Cross-matched against HST_fall18_refine.fits: RA_1/DEC_1 are the coordinates according to HST_fall18_refine.fits (used for cross-matching against the target list), while RA_2/DEC_2 are the coordinates in the public PHATTER release (which have associated photometry). When cross-matching targets, for masks where I know the design was based on HST photometry I start with phatter_matchedall.fits, and for the handful of stars which don't have matches, I go back to the original source catalogue of HST_fall18_refine.fits (which is slightly differently calibrated for the magnitudes, but based on the crossmatch not at a very significant level, and also lacks photometric uncertainties). There aren't too many stars which fall into this category. 
I used the public phatter photometry for all targets on Margaret's masks (except her HMXB candidates); where this might be relevant is for pTdupR, which selects only from previously-observed targets and therefore takes partially from the original HST_fall18 catalogue. 


Tables
- m33_vels_stars_inc22B_donedupes.fits; contains the final catalogue of M33 stars crossmatched against the photometry, including all M33 masks up to and including 2022B (except for pTdupR) I sent to Miranda for modelling. 1 entry per unique star (i.e. duplicates have their velocity set as the weighted average velocity across all observations of the star, assuming all observations agree on target coordinates, have the same z-quality, and don't have outrageously large velocity uncertainties). Doesn't include serendips since I didn't have RA/DEC information for these at the time. 
- m33_vels_stars_inc22B_wpops.fits; effectively the same as the above file, but before duplicate entries are consolidated (i.e. there should be one entry per observation, more useful for abundances). 
While some stars cross-match against multiple photometry catalogues (e.g. sometimes a target shows up in both PAndAS and HST photometry, and/or appear in both the public PAndAS release and the original custom-aligned MegaCam photometry), the ones used for the target selection (and therefore the most reliable) are the ones in the dereddened photometry columns (G0_CFHT, I0_CFHT, F475W0_ACS, F606W0_ACS, F814W0_ACS). That is - check those dereddened columns to identify what photometry was used to identify the source. For the abundance code, I believe you need the dereddened magnitudes anyway. I0_CFHT has been transformed to consistently use i_new (post-filter replacement). 
- probs_allRGB30.0_LD_LH_TTTF3.0.fits; contains disk/halo probabilities for all RGB stars in my 2023 paper, assuming a rotating disk and halo. I'd need to regenerate this to include the new stars and match Miranda's analysis.

Abundance code
- the folder belaifellow, as well as example_Copy1.0.py, are codes Haben used to start the M33 abundance coadds; the remaining code is what we used to actually perform the abundance measurements (for individual stars and coadds). 
- example_Copy1.0.py describes how the different coadds were chosen. Effectively, we used the probabilities from my model (p_disk<0.2 for halo stars, p_disk>0.75 for disk, and 0.2<p_disk<0.75 between those for inconclusive) to sort the stars into groups, and then sorted the stars within those groups by photometric metallicity in order to choose which stars to coadd in each group (from Leigh's and my papers, it makes no difference to group by metallicity vs anything else like T_eff). We only coadded stars on the same mask, but in theory since many masks in the centre overlap, you might want to coadd stars located most closely in position (within the same disk/halo classification), regardless of which mask they fall on, with the restriction that they were observed with the same grating. 
- abundcommands.txt describes how to run abundance analysis for individual stars (a necessary precursor for coadds). This includes steps to generate moogify.fits.gz (collating the relevant parameters into the correct format and measuring T_eff/log(g)/metallicity from the photometry for each mask; running the initial fit to obtain a first estimate of spectroscopic metallicity/alpha abundances, and formatting those results into the expected input for coadds. Moogify.fits.gz files generated using these commands will includes photometric parameters derived for isochrones of all ages of the associated photometry type within the code/isochrones/rgb folder, but for the abundance determination code itself you have to specify an age (in the examples, 10Gyr), but you can re-run with different ages and they will produce different outputs (saved in different folders). This is probably important for M33 where we expect at least some "young" (i.e. ~4Gyr) RGB stars.
The parameters derived for stars with strong TiO won't be meaningful, so these should be fitered out (possibly easier to just ignore them after running all individual determinations, but you could filter them out beforehand from moogify.fits.gz), as should non-RGB stars; there is a folder nominally for AGB star isochrones, but I don't believe we trust the parameters the pipeline derives for these stars (worth checking with Ivanna). 
- coadd_spectrum_code.py describes how coadds are actually run
- summary_plots.py describes how we checked coadded spectra for convergence (and made the final plots for his poster). 

iMega.fil: I got the filter curve from Leo Girardi used by the PARSEC isochrones for the CFHT i-band filter, since it's not clear from the documentation if the isochrones use i_new or i_old, but I never got around to determining which it is (it wasn't relevant for AndXIX). But for M33 that will affect if the photometry for CFHT targets needs to be transformed (T_eff and log(g) are held fixed at their photometric values for all targets). It might be worth comparing this curve to the published i_old and i_new curves to see which it corresponds to (if either) - I don't expect it to make a significant difference, but I would rest easier knowing which it really is! 

M33_data_forup.tar
- Contains all the 1D spectra and zspec files I have for M33 masks, including serendips (though serendips don't have associated RA/DEC coordinates). For some masks this includes moogify.fits.gz files, but some of these look suspiciously small, so I'd be inclined to re-generate these all consistently. 
Does not include: 1D spectra for pTdup1, or 1D spectra for any 2022/2023 masks.